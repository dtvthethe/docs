brew services list

brew services start XX

-----------

Uninstall Mysql
	brew uninstall mysql@5.7
	sudo rm -rf /usr/local/var/mysql
	sudo rm /usr/local/etc/my.cnf

After install mysql
	echo 'export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"' >> ~/.zshrc
	export LDFLAGS="-L/usr/local/opt/mysql@5.7/lib"
	export CPPFLAGS="-I/usr/local/opt/mysql@5.7/include"
	/usr/local/opt/mysql@5.7/bin/mysqld_safe --datadir=/usr/local/var/mysql

	mysql_secure_installation

	mysql -uroot -p

-----------
Install PHP -FPM

	brew tap homebrew/dupes
	  brew tap homebrew/dupes && \
  brew tap homebrew/php && \
  brew install --without-apache --with-fpm --with-mysql php74

-----------

Reload nginx after update config file:

	sudo nginx -s reload <<<---- brew service nginx must be running



---------
config nginx:
	

trong file: nginx.config
	include sites-enabled/*;


---------
log folder;
	/usr/local/var/log

---------
Error 502 Bad Gatewaye
    See linux .txt

---------

server {
    listen 2812;
    server_name mrmax;

    # SSL configuration
    #
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;
    #
    # Note: You should disable gzip for SSL traffic.
    # See: https://bugs.debian.org/773332
    #
    # Read up on ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782
    #
    # Self signed certs generated by the ssl-cert package
    # Don't use them in a production server!
    #
    # include snippets/snakeoil.conf;

    root /Users/damthe/workspace/mr_max/mrmax;
    index index.php;
    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;

        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
      deny all;
    }
}
