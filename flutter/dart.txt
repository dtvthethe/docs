Dart là đơn kế thừa

const vs final
- const: phải đc gán giá trị, sẽ bị lỗi lúc combine
- final: có thể gán 1 biến, sẽ bị lỗi lúc runtime khi lần đầu chạy phải có giá trị, ko thể gán giá trị lần 2 (chỉ dc 1 lần)

var vs dynamic
- var: sẽ xác định kiểu dữ liệu lần đầu tiên đc gán, nếu lần tiếp theo gán kiểu dữ liệu khác sẽ bị lỗi
- var vs dynamic: có thể gán các kiểu dữ liệu khác nhau mà ko bị lỗi

late
- gán muộn gán, trễ giá trị 
- nếu khởi tạo lúc đầu thì sẽ ko cho null nhưng nếu add thên `late` thì có nghĩa là sẽ gán biến cho nó sau.

list vs set vs map
- list: [] có thể gán GenenicType, sử dụng Object hoặc dynamic để chứa đc nhiều kiểu dữ liệu
- set: {} tập hợp câc giá trị unique 
- map: key - value

getter vs setter
- getter: double get right => left + width;
- setter: set right(double value) => left = value;

List vs Set 
- Cả 2 đều kế thừa từ Iterable
- Cả 2 đều loop đc
- List chứa các danh sách các giá trị
- Set chứa tập hợp các giá trị ko bị lặp 
- List: List<T>
- Set: Set<T>

exception
- on OutOfLlamasException catch (e) {...}

mixin: 
- ko co contructor
- sử dụng từ khóa `mixin` để tạo mixin
- sử dụng `with` để gọi.
- chứa các module

interface
- có thể chưa property và method.
- method ko đc định nghĩa
- trong Dart ko có từ khóa `interface` sử dụng class để khai báo thay cho interrfac, khác biệt vs classs là hàm ko đc định nghĩa
- sử dụng từ khóa `implements` để gọi interface

Abstract class
- tạo abstract class thì dùng từ khóa `abstract class Abc`
- function abtract ko cần từ khóa `abstract` chỉ cần ko định nghĩa thân hàm là đc
- gọi abstract bằng từ khóa `extends`


Arrow function
- Ko giống TS ở chỗ là sau tên hàm ko có dấu `=`

  String greeting(String name) => 'Hello, $name!';
  main() {
      print(greeting('Wallace'));
  }
  
Class
- Khai báo class vs property là private thì phải tạo property.
  class Employee {
    String? _name;

    Employee({String? name}) {
      this._name = name;
    }

    String? get name => this._name;
    set name(String? name) => this._name = name;
  }

  Employee a = Employee(name: 'abc');

- Khai baos class vs property là pulic 
  class Student {
    Student({String? name}); // ko cần `this` vì chỗ này là khởi tạo

    String? get name => this.name;
    set name(String? name) => this.name = name;
  }

  Student b = Student(name: 'abc');
