var:
    type scope <name>;

array:
    type[] scope <name>;

mapping:
    mapping(type => type) <name>;

function: 
    function <name> scope view/pure returns (type memory) {

    }

Contract, enum, struct, interface:
    Contract/enum/struct/interface <name> {

    }

    // struct doesn't need scope, "new" keyword
    struct Book { 
      string title;
      string author;
    }
    book = Book('Java', 'Adam');

    // enum start = 0, return type name of struct<name>
    enum Size{ SMALL, MEDIUM, LARGE }
    function getChoice() public view returns (Size) {
      return choice;
    }

    // interface: giống như trong C#

Compare 2 string:
    return (keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b)));
    return (a == b); // version >= 0.8.0. Chi phí cao hơn sử dụng keccak256


sope
    private
    public
    internal: bên ngoài ko dùng đc, chỉ các class con có kế thừa ms dùng đc 
